/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsDate } from "class-validator";
import { AttendanceCreateNestedManyWithoutStudentsInput } from "./AttendanceCreateNestedManyWithoutStudentsInput";
import { Type } from "class-transformer";
import { ExamCreateNestedManyWithoutStudentsInput } from "./ExamCreateNestedManyWithoutStudentsInput";
import { ParentWhereUniqueInput } from "../../parent/base/ParentWhereUniqueInput";
import { ReportsCreateNestedManyWithoutStudentsInput } from "./ReportsCreateNestedManyWithoutStudentsInput";
import { SchoolFeesCreateNestedManyWithoutStudentsInput } from "./SchoolFeesCreateNestedManyWithoutStudentsInput";

@InputType()
class StudentCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => AttendanceCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => AttendanceCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  attendances?: AttendanceCreateNestedManyWithoutStudentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  classField?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => ExamCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => ExamCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => ExamCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  exams?: ExamCreateNestedManyWithoutStudentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => ParentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ParentWhereUniqueInput)
  @IsOptional()
  @Field(() => ParentWhereUniqueInput, {
    nullable: true,
  })
  parent?: ParentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ReportsCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => ReportsCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => ReportsCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  reportsItems?: ReportsCreateNestedManyWithoutStudentsInput;

  @ApiProperty({
    required: false,
    type: () => SchoolFeesCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => SchoolFeesCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => SchoolFeesCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  schoolFeesItems?: SchoolFeesCreateNestedManyWithoutStudentsInput;
}

export { StudentCreateInput as StudentCreateInput };
