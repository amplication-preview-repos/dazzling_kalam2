/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { AttendanceListRelationFilter } from "../../attendance/base/AttendanceListRelationFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { ExamListRelationFilter } from "../../exam/base/ExamListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { ParentWhereUniqueInput } from "../../parent/base/ParentWhereUniqueInput";
import { ReportsListRelationFilter } from "../../reports/base/ReportsListRelationFilter";
import { SchoolFeesListRelationFilter } from "../../schoolFees/base/SchoolFeesListRelationFilter";

@InputType()
class StudentWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  address?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => AttendanceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AttendanceListRelationFilter)
  @IsOptional()
  @Field(() => AttendanceListRelationFilter, {
    nullable: true,
  })
  attendances?: AttendanceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  classField?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateOfBirth?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ExamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ExamListRelationFilter)
  @IsOptional()
  @Field(() => ExamListRelationFilter, {
    nullable: true,
  })
  exams?: ExamListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ParentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ParentWhereUniqueInput)
  @IsOptional()
  @Field(() => ParentWhereUniqueInput, {
    nullable: true,
  })
  parent?: ParentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ReportsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReportsListRelationFilter)
  @IsOptional()
  @Field(() => ReportsListRelationFilter, {
    nullable: true,
  })
  reportsItems?: ReportsListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SchoolFeesListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SchoolFeesListRelationFilter)
  @IsOptional()
  @Field(() => SchoolFeesListRelationFilter, {
    nullable: true,
  })
  schoolFeesItems?: SchoolFeesListRelationFilter;
}

export { StudentWhereInput as StudentWhereInput };
