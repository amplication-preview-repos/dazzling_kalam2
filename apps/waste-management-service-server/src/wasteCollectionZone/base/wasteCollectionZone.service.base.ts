/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  WasteCollectionZone as PrismaWasteCollectionZone,
} from "@prisma/client";

export class WasteCollectionZoneServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WasteCollectionZoneCountArgs, "select">
  ): Promise<number> {
    return this.prisma.wasteCollectionZone.count(args);
  }

  async wasteCollectionZones<T extends Prisma.WasteCollectionZoneFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.WasteCollectionZoneFindManyArgs>
  ): Promise<PrismaWasteCollectionZone[]> {
    return this.prisma.wasteCollectionZone.findMany<Prisma.WasteCollectionZoneFindManyArgs>(
      args
    );
  }
  async wasteCollectionZone<T extends Prisma.WasteCollectionZoneFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.WasteCollectionZoneFindUniqueArgs>
  ): Promise<PrismaWasteCollectionZone | null> {
    return this.prisma.wasteCollectionZone.findUnique(args);
  }
  async createWasteCollectionZone<
    T extends Prisma.WasteCollectionZoneCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.WasteCollectionZoneCreateArgs>
  ): Promise<PrismaWasteCollectionZone> {
    return this.prisma.wasteCollectionZone.create<T>(args);
  }
  async updateWasteCollectionZone<
    T extends Prisma.WasteCollectionZoneUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.WasteCollectionZoneUpdateArgs>
  ): Promise<PrismaWasteCollectionZone> {
    return this.prisma.wasteCollectionZone.update<T>(args);
  }
  async deleteWasteCollectionZone<
    T extends Prisma.WasteCollectionZoneDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.WasteCollectionZoneDeleteArgs>
  ): Promise<PrismaWasteCollectionZone> {
    return this.prisma.wasteCollectionZone.delete(args);
  }
}
